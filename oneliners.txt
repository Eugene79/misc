# filter out from BAM reads with CIGAR containing N

samtools view -h input.bam | awk '$6 !~ /N/ || $1 ~ /^@/' | samtools view -bS - > not-n-output.bam

# filter out from BAM only uniquely mapped reads( NH:i:1)
(samtools view -H $input_bam; samtools view $input_bam | grep -w 'NH:i:1') | samtools view -bS - > output_filtered.bam

# reorder columns for refFlat file
paste <(cut -f 1 dmel_retro.tmp.refFlat) <(cut -f 1-10 dmel_retro.tmp.refFlat) > dmel_retro.refFlat

#remove reads with given names
samtools view test.bam | grep -wv '1598\|1530\|1501' | samtools view -bS - > output_filtered.bam

# search for multiple aligned reads plus transposons
tail -n 10000 /software/galaxy/database/files/023/dataset_23870.dat | grep -wv 'NH:i:1' | grep -v 'FBtr*'

# retrieve sequences with pattern in name 
grep -A 1  “pattern” file.fa | tr -d "-" | grep -v '^$' > new_file.fa

# retrieve symbols starting with ARF and ids starting with At from txt file
tail -n +2 $file | cut -f 4 | sed -E -n 's/(ARF[0-9]+).*(At[^ ]+).*/\1 \2/p' | tr ' ' '\t' > $output

## extract last (NH) tag from bam

samtools view /software/galaxy/database/files/014/dataset_14633.dat |  rev | cut -d : -f 1 | rev

# remove Mt, Pt and ambiguous reads from list of barflies
while IFS= read -r line; do (samtools view -H $line; samtools view $line | grep -v "Pt" | grep -v “Mt" | grep -v "XA:Z:*") | samtools view -bS - > $line_1; echo “done $line”; done < list_bamfiles.txt

# reheader bam file (e.g insert missing chromosome)

samtools view -H $BAM > header.sam; edit header.sam; samtools reheader header.sam $BAM > $BAM_edited; mv $BAM_edited $BAM

# length of chromosome from fasta

samtools faidx input.fa
cut -f1,2 input.fa.fai > sizes.genome

################
## renaming

# remove substring with (Book…) from file’s name
rename 's/\(Book[^)]*\)//' *.pdf

# renaming pdf files by changing the order of substrings: put substring in brackets [] on the second place

rename 's/(\[[^]]+\])([^.]+)(.pdf)/$2_$1$3/' *.pdf

# rename: add string to file name

rename 's/Markers_([^.]+)(.txt)/Markers_$string_$1$2/' *.txt

# rename pdf files by changing the order of substrings: put substring before ‘et_al’ on the second place
rename 's/([^[]+et\_al\.\_)([^.]+)(.pdf)/$2_$1$3/' *.pdf

# copy as backup previously opened file
cp !$ !#:1.back

# merged multiple files (take first column only once, keep 2nd columns)
for file in ./*.counts; do awk 'NR==1 { print "genes\t",FILENAME }; 1' "$file" > "$file".temp; done
paste *.temp > all_counts.txt
cut -f 1,2,4,6,8,10,12,14,16,18,20,22,24 all_counts.txt > all_counts_selected.txt

### changing word in last command in bash

!!:gs/WORD1/WORD2

### for loops

## read lines from file and use them as argument for echo, ls, wget, fexget, …
while read p; do echo $p; done < $file

#### gunzip with for loop
#
for f in *.gz ; do gunzip -c "$f" > ../folder2/"${f%.*}" ; done


#### Tagged

## extract two tags (XC and XM) for later processing

samtools view $file | sed -E 's/.*XC:Z:(............).*XM:Z:(........).*/\1 \2/' > $output

### for loop for htseq

for f in *.bam; do python2.7 /Users/eugenrempel/Documents/Python/DEXSeq_scripts/dexseq_count.py -p yes -r pos -s no -f bam /Users/eugenrempel/Documents/Genomes/Mmus/Mmus_38.89_dexseq_no_aggregation.gff $f $f.counts; done

### for loop for cutting out columns from *_deseq files with redirection to *.deseq.GSEA

for f in *_deseq; do cut -f 1,3 $f > $f.deseq.GSEA; done

## same as above, remove headers and NAs

for f in *_deseq; do cut -f 1,3 $f| tail -n +2 | grep -v "NA" > $f.deseq_new.GSEA; done


### redirection

# redirect help to grep

$command -h 2>&1 | grep $pattern

### extraction

# extract string from first quotes

sed -E 's/[^"]*"([^"]*)".*/\1/'

#return allow apps from anywhere into security settings on MAC

sudo spctl --master-disable
(close and open back settings window)

# add 1 to the 2nd column of multiple files with names in a file
for file in $(<files_to_add_one_to_second_column.txt); do awk '{$2+=1}1' $file > $file.out && mv $file.out $file; done


# change defaults in R. Change corresponding lines in the file

 ./Library/Frameworks/R.framework/Versions/3.4/Resources/library/base/R/Rprofile

######## cache

# check cache

cat /proc/meminfo

# clear cache as root

sync; echo 3 > /proc/sys/vm/drop_caches

# install xcode on mac

xcode-select --install
 
 
 
